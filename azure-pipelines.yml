# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

jobs:
- job: Linux
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk'
      version: '2.2.101'
  - script: dotnet build ./SimplCommerce.sln
    displayName: 'dotnet build'
  - script: ./run-tests.sh
    displayName: 'run tests'
  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/*.trx'
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: '**/*.trx' 

- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk'
      version: '2.2.101'
  - script: dotnet build ./SimplCommerce.sln
    displayName: 'dotnet build'
  - script: ./run-tests.sh
    displayName: 'run tests'
  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/*.trx'
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: '**/*.trx' 

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk'
      version: '2.2.101'
  - script: dotnet build ./SimplCommerce.sln
    displayName: 'dotnet build'
  - task: PowerShell@2
    inputs:
      filePath: .\run-tests.ps1
    displayName: 'run tests'
  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/*.trx'
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: '**/*.trx' 

- job: LinuxRelease
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    buildConfiguration: 'Release'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk'
      version: '2.2.101'
  - script: dotnet build --configuration $(buildConfiguration)
    displayName: 'dotnet build $(buildConfiguration)'
  - script: ./run-tests.sh
    displayName: 'run tests'    
  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/*.trx'
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: '**/*.trx' 
